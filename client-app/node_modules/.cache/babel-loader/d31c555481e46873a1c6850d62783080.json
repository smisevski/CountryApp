{"remainingRequest":"/srv/source/CountryApp/client-app/node_modules/babel-loader/lib/index.js!/srv/source/CountryApp/client-app/node_modules/vuetify/lib/composables/theme.mjs","dependencies":[{"path":"/srv/source/CountryApp/client-app/node_modules/vuetify/lib/composables/theme.mjs","mtime":499162500000},{"path":"/srv/source/CountryApp/client-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/source/CountryApp/client-app/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/composables/theme.ts"],"names":["colorToInt","colorToRGB","createRange","intToHex","lighten","darken","getLuma","VuetifyThemeSymbol","Symbol","defaultThemeOptions","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","parseThemeOptions","options","isDisabled","parsedOptions","styleEl","ref","current","computedThemes","computed","theme","genColorVariations","color","Object","onColor","obj","variation","fn","lightOverlay","darkOverlay","rgb","key","el","document","content","line","genStyleElement","lines","themeName","createCssClass","genCssVariables","firstTheme","i","watch","deep","immediate","setTheme","getTheme","themeClasses","hasColor","props","inject","internal","get","set","context","newTheme","provide"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\nimport { colorToInt, colorToRGB, createRange, intToHex, lighten, darken, getLuma } from '@/util'\n\n// Types\nimport type { InjectionKey, Ref, SetupContext } from 'vue'\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\ninterface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\ninterface ThemeDefinitionColors extends BaseColors, Partial<OnColors> {\n  [key: string]: string | undefined\n}\n\nexport interface ThemeDefinition {\n  dark: boolean\n  colors: ThemeDefinitionColors\n  variables: Record<string, string | number>\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeOptions {\n  isDisabled: boolean\n  defaultTheme: string\n  variations: VariationsOptions\n  themes: Record<string, ThemeDefinition>\n}\n\nexport type ThemeOptions = false | {\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n}\n\nexport interface ThemeInstance {\n  isDisabled: boolean\n  themes: Ref<Record<string, InternalThemeDefinition>>\n  current: Ref<string>\n  themeClasses: Ref<string>\n  setTheme: (key: string, theme: ThemeDefinition) => void\n  getTheme: (key: string) => InternalThemeDefinition\n  hasColor: (color: string) => boolean\n}\n\nexport const VuetifyThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nconst defaultThemeOptions: ThemeOptions = {\n  defaultTheme: 'light',\n  variations: { colors: [], lighten: 0, darken: 0 },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '0, 0, 0',\n        'border-opacity': 0.12,\n      },\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#121212',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '255, 255, 255',\n        'border-opacity': 0.12,\n      },\n    },\n  },\n}\n\nconst parseThemeOptions = (options: ThemeOptions = defaultThemeOptions): InternalThemeOptions => {\n  if (!options) return { ...defaultThemeOptions, isDisabled: true } as InternalThemeOptions\n\n  return {\n    ...defaultThemeOptions,\n    ...options,\n    variations: options?.variations == null || options?.variations === false ? defaultThemeOptions.variations : options.variations,\n  } as InternalThemeOptions\n}\n\nexport function createTheme (options?: ThemeOptions): ThemeInstance {\n  const parsedOptions = parseThemeOptions(options)\n  const styleEl = ref<HTMLStyleElement>()\n  const current = ref(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n  const variations = ref(parsedOptions.variations)\n\n  const computedThemes = computed(() => {\n    return Object.keys(themes.value).reduce((obj, key) => {\n      const theme: ThemeDefinition = {\n        ...themes.value[key],\n        colors: {\n          ...themes.value[key].colors,\n          ...(parsedOptions.variations.colors ?? []).reduce((obj, color) => {\n            return { ...obj, ...genColorVariations(color, themes.value[key].colors[color]!) }\n          }, {}),\n        },\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue\n\n        const onColor = `on-${color}` as keyof OnColors\n        theme.colors[onColor] = intToHex(getLuma(theme.colors[color]!) > 0.18 ? 0x0 : 0xffffff)\n      }\n\n      obj[key] = theme as InternalThemeDefinition\n\n      return obj\n    }, {} as Record<string, InternalThemeDefinition>)\n  })\n\n  function genColorVariations (name: string, color: string) {\n    const obj: Record<string, string> = {}\n    for (const variation of (['lighten', 'darken'] as const)) {\n      const fn = variation === 'lighten' ? lighten : darken\n      for (const amount of createRange(variations.value[variation], 1)) {\n        obj[`${name}-${variation}-${amount}`] = intToHex(fn(colorToInt(color), amount))\n      }\n    }\n\n    return obj\n  }\n\n  function genCssVariables (name: string) {\n    const theme = computedThemes.value[name]\n\n    if (!theme) throw new Error(`Could not find theme ${name}`)\n\n    const lightOverlay = theme.dark ? 2 : 1\n    const darkOverlay = theme.dark ? 1 : 2\n\n    const variables: string[] = []\n    for (const [key, value] of Object.entries(theme.colors)) {\n      const rgb = colorToRGB(value!)\n      variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n      if (!key.startsWith('on-')) {\n        variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n      }\n    }\n\n    return variables\n  }\n\n  function genStyleElement () {\n    if (typeof document === 'undefined' || styleEl.value) return\n\n    const el = document.createElement('style')\n    el.type = 'text/css'\n    el.id = 'vuetify-theme-stylesheet'\n\n    styleEl.value = el\n    document.head.appendChild(styleEl.value)\n  }\n\n  function createCssClass (selector: string, content: string[]) {\n    return [\n      `${selector} {\\n`,\n      ...content.map(line => `  ${line};\\n`),\n      '}\\n',\n    ]\n  }\n\n  function updateStyles () {\n    if (parsedOptions.isDisabled) return\n\n    genStyleElement()\n\n    const lines = []\n\n    for (const themeName of Object.keys(computedThemes.value)) {\n      const variables = computedThemes.value[themeName].variables\n\n      lines.push(...createCssClass(`.v-theme--${themeName}`, [\n        ...genCssVariables(themeName),\n        ...Object.keys(variables).map(key => {\n          return `--v-${key}: ${variables[key]}`\n        }),\n      ]))\n    }\n\n    // Assumption is that all theme objects have the same keys, so it doesn't matter which one\n    // we use since the values are all css variables.\n    const firstTheme = Object.keys(computedThemes.value)[0]\n    for (const key of Object.keys(computedThemes.value[firstTheme].colors)) {\n      if (/on-[a-z]/.test(key)) {\n        lines.push(...createCssClass(`.${key}`, [`color: rgb(var(--v-theme-${key}))`]))\n      } else {\n        lines.push(\n          ...createCssClass(`.bg-${key}`, [\n            `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n            `background: rgb(var(--v-theme-${key}))`,\n            `color: rgb(var(--v-theme-on-${key}))`,\n          ]),\n          ...createCssClass(`.text-${key}`, [`color: rgb(var(--v-theme-${key}))`]),\n          ...createCssClass(`.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]),\n        )\n      }\n    }\n\n    if (styleEl.value) styleEl.value.innerHTML = lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  }\n\n  watch(themes, updateStyles, { deep: true, immediate: true })\n\n  return {\n    isDisabled: parsedOptions.isDisabled,\n    themes: computedThemes,\n    setTheme: (key: string, theme: ThemeDefinition) => themes.value[key] = theme,\n    getTheme: (key: string) => computedThemes.value[key],\n    current,\n    themeClasses: computed(() => parsedOptions.isDisabled ? '' : `v-theme--${current.value}`),\n    hasColor: (color: string) => !!computedThemes.value[current.value].colors[color],\n  }\n}\n\n/**\n * Used to either set up and provide a new theme instance, or to pass\n * along the closest available already provided instance.\n *\n * A new theme instance will be created if either `theme` prop is provided,\n * or if `newContext` prop is true\n */\nexport function provideTheme (props: { theme?: string, newContext?: boolean } = {}, context: SetupContext) {\n  const theme = inject(VuetifyThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const internal = ref<string | null>(null)\n  const current = computed<string>({\n    get: () => {\n      return internal.value ?? props.theme ?? theme?.current.value\n    },\n    set (value: string) {\n      if (theme && !props.theme && !props.newContext) {\n        theme.current.value = value\n      } else {\n        internal.value = value\n        context.emit('update:theme', value)\n      }\n    },\n  })\n\n  const themeClasses = computed(() => theme.isDisabled ? '' : `v-theme--${current.value}`)\n  const newTheme: ThemeInstance = {\n    ...theme,\n    current,\n    themeClasses,\n  }\n\n  provide(VuetifyThemeSymbol, newTheme)\n\n  return newTheme\n}\n\n/**\n * Injects and returns closest available provided theme instance.\n */\nexport function useTheme () {\n  const theme = inject(VuetifyThemeSymbol)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n"]}]}