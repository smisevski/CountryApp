{"remainingRequest":"/srv/source/CountryApp/client-app/node_modules/babel-loader/lib/index.js!/srv/source/CountryApp/client-app/node_modules/vuetify/lib/components/VGrid/VRow.mjs","dependencies":[{"path":"/srv/source/CountryApp/client-app/node_modules/vuetify/lib/components/VGrid/VRow.mjs","mtime":499162500000},{"path":"/srv/source/CountryApp/client-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/source/CountryApp/client-app/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvc3J2L3NvdXJjZS9Db3VudHJ5QXBwL2NsaWVudC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL3Nydi9zb3VyY2UvQ291bnRyeUFwcC9jbGllbnQtYXBwL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKLy8gU3R5bGVzCmltcG9ydCAiLi9WR3JpZC5zYXNzIjsgLy8gQ29tcG9zYWJsZXMKCmltcG9ydCB7IG1ha2VUYWdQcm9wcyB9IGZyb20gIi4uLy4uL2NvbXBvc2FibGVzL3RhZy5tanMiOyAvLyBVdGlsaXRpZXMKCmltcG9ydCB7IGNhcGl0YWxpemUsIGNvbXB1dGVkLCBkZWZpbmVDb21wb25lbnQsIGggfSBmcm9tICd2dWUnOwppbXBvcnQgbWFrZVByb3BzIGZyb20gIi4uLy4uL3V0aWwvbWFrZVByb3BzLm1qcyI7IC8vIFR5cGVzCgp2YXIgYnJlYWtwb2ludHMgPSBbJ3NtJywgJ21kJywgJ2xnJywgJ3hsJ107IC8vIG5vIHhzCgp2YXIgQUxJR05NRU5UID0gWydzdGFydCcsICdlbmQnLCAnY2VudGVyJ107CgpmdW5jdGlvbiBtYWtlUm93UHJvcHMocHJlZml4LCBkZWYpIHsKICByZXR1cm4gYnJlYWtwb2ludHMucmVkdWNlKGZ1bmN0aW9uIChwcm9wcywgdmFsKSB7CiAgICBwcm9wc1twcmVmaXggKyBjYXBpdGFsaXplKHZhbCldID0gZGVmKCk7CiAgICByZXR1cm4gcHJvcHM7CiAgfSwge30pOwp9Cgp2YXIgYWxpZ25WYWxpZGF0b3IgPSBmdW5jdGlvbiBhbGlnblZhbGlkYXRvcihzdHIpIHsKICByZXR1cm4gW10uY29uY2F0KEFMSUdOTUVOVCwgWydiYXNlbGluZScsICdzdHJldGNoJ10pLmluY2x1ZGVzKHN0cik7Cn07Cgp2YXIgYWxpZ25Qcm9wcyA9IG1ha2VSb3dQcm9wcygnYWxpZ24nLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHsKICAgIHR5cGU6IFN0cmluZywKICAgIGRlZmF1bHQ6IG51bGwsCiAgICB2YWxpZGF0b3I6IGFsaWduVmFsaWRhdG9yCiAgfTsKfSk7Cgp2YXIganVzdGlmeVZhbGlkYXRvciA9IGZ1bmN0aW9uIGp1c3RpZnlWYWxpZGF0b3Ioc3RyKSB7CiAgcmV0dXJuIFtdLmNvbmNhdChBTElHTk1FTlQsIFsnc3BhY2UtYmV0d2VlbicsICdzcGFjZS1hcm91bmQnXSkuaW5jbHVkZXMoc3RyKTsKfTsKCnZhciBqdXN0aWZ5UHJvcHMgPSBtYWtlUm93UHJvcHMoJ2p1c3RpZnknLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHsKICAgIHR5cGU6IFN0cmluZywKICAgIGRlZmF1bHQ6IG51bGwsCiAgICB2YWxpZGF0b3I6IGp1c3RpZnlWYWxpZGF0b3IKICB9Owp9KTsKCnZhciBhbGlnbkNvbnRlbnRWYWxpZGF0b3IgPSBmdW5jdGlvbiBhbGlnbkNvbnRlbnRWYWxpZGF0b3Ioc3RyKSB7CiAgcmV0dXJuIFtdLmNvbmNhdChBTElHTk1FTlQsIFsnc3BhY2UtYmV0d2VlbicsICdzcGFjZS1hcm91bmQnLCAnc3RyZXRjaCddKS5pbmNsdWRlcyhzdHIpOwp9OwoKdmFyIGFsaWduQ29udGVudFByb3BzID0gbWFrZVJvd1Byb3BzKCdhbGlnbkNvbnRlbnQnLCBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIHsKICAgIHR5cGU6IFN0cmluZywKICAgIGRlZmF1bHQ6IG51bGwsCiAgICB2YWxpZGF0b3I6IGFsaWduQ29udGVudFZhbGlkYXRvcgogIH07Cn0pOwp2YXIgcHJvcE1hcCA9IHsKICBhbGlnbjogT2JqZWN0LmtleXMoYWxpZ25Qcm9wcyksCiAganVzdGlmeTogT2JqZWN0LmtleXMoanVzdGlmeVByb3BzKSwKICBhbGlnbkNvbnRlbnQ6IE9iamVjdC5rZXlzKGFsaWduQ29udGVudFByb3BzKQp9Owp2YXIgY2xhc3NNYXAgPSB7CiAgYWxpZ246ICdhbGlnbicsCiAganVzdGlmeTogJ2p1c3RpZnknLAogIGFsaWduQ29udGVudDogJ2FsaWduLWNvbnRlbnQnCn07CgpmdW5jdGlvbiBicmVha3BvaW50Q2xhc3ModHlwZSwgcHJvcCwgdmFsKSB7CiAgdmFyIGNsYXNzTmFtZSA9IGNsYXNzTWFwW3R5cGVdOwoKICBpZiAodmFsID09IG51bGwpIHsKICAgIHJldHVybiB1bmRlZmluZWQ7CiAgfQoKICBpZiAocHJvcCkgewogICAgLy8gYWxpZ25TbSAtPiBTbQogICAgdmFyIGJyZWFrcG9pbnQgPSBwcm9wLnJlcGxhY2UodHlwZSwgJycpOwogICAgY2xhc3NOYW1lICs9ICItIi5jb25jYXQoYnJlYWtwb2ludCk7CiAgfSAvLyAuYWxpZ24taXRlbXMtc20tY2VudGVyCgoKICBjbGFzc05hbWUgKz0gIi0iLmNvbmNhdCh2YWwpOwogIHJldHVybiBjbGFzc05hbWUudG9Mb3dlckNhc2UoKTsKfQoKZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnVlJvdycsCiAgcHJvcHM6IG1ha2VQcm9wcyhfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHsKICAgIGRlbnNlOiBCb29sZWFuLAogICAgbm9HdXR0ZXJzOiBCb29sZWFuLAogICAgYWxpZ246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsLAogICAgICB2YWxpZGF0b3I6IGFsaWduVmFsaWRhdG9yCiAgICB9CiAgfSwgYWxpZ25Qcm9wcyksIHt9LCB7CiAgICBqdXN0aWZ5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbCwKICAgICAgdmFsaWRhdG9yOiBqdXN0aWZ5VmFsaWRhdG9yCiAgICB9CiAgfSwganVzdGlmeVByb3BzKSwge30sIHsKICAgIGFsaWduQ29udGVudDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICAgIHZhbGlkYXRvcjogYWxpZ25Db250ZW50VmFsaWRhdG9yCiAgICB9CiAgfSwgYWxpZ25Db250ZW50UHJvcHMpLCBtYWtlVGFnUHJvcHMoKSkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcywgX3JlZikgewogICAgdmFyIHNsb3RzID0gX3JlZi5zbG90czsKICAgIHZhciBjbGFzc2VzID0gY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2NsYXNzTGlzdCRwdXNoOwoKICAgICAgdmFyIGNsYXNzTGlzdCA9IFtdOyAvLyBMb29wIHRocm91Z2ggYGFsaWduYCwgYGp1c3RpZnlgLCBgYWxpZ25Db250ZW50YCBicmVha3BvaW50IHByb3BzCgogICAgICB2YXIgdHlwZTsKCiAgICAgIGZvciAodHlwZSBpbiBwcm9wTWFwKSB7CiAgICAgICAgcHJvcE1hcFt0eXBlXS5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wKSB7CiAgICAgICAgICB2YXIgdmFsdWUgPSBwcm9wc1twcm9wXTsKICAgICAgICAgIHZhciBjbGFzc05hbWUgPSBicmVha3BvaW50Q2xhc3ModHlwZSwgcHJvcCwgdmFsdWUpOwogICAgICAgICAgaWYgKGNsYXNzTmFtZSkgY2xhc3NMaXN0LnB1c2goY2xhc3NOYW1lKTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgY2xhc3NMaXN0LnB1c2goKF9jbGFzc0xpc3QkcHVzaCA9IHsKICAgICAgICAndi1yb3ctLW5vLWd1dHRlcnMnOiBwcm9wcy5ub0d1dHRlcnMsCiAgICAgICAgJ3Ytcm93LS1kZW5zZSc6IHByb3BzLmRlbnNlCiAgICAgIH0sIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NMaXN0JHB1c2gsICJhbGlnbi0iLmNvbmNhdChwcm9wcy5hbGlnbiksIHByb3BzLmFsaWduKSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc0xpc3QkcHVzaCwgImp1c3RpZnktIi5jb25jYXQocHJvcHMuanVzdGlmeSksIHByb3BzLmp1c3RpZnkpLCBfZGVmaW5lUHJvcGVydHkoX2NsYXNzTGlzdCRwdXNoLCAiYWxpZ24tY29udGVudC0iLmNvbmNhdChwcm9wcy5hbGlnbkNvbnRlbnQpLCBwcm9wcy5hbGlnbkNvbnRlbnQpLCBfY2xhc3NMaXN0JHB1c2gpKTsKICAgICAgcmV0dXJuIGNsYXNzTGlzdDsKICAgIH0pOwogICAgcmV0dXJuIGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGgocHJvcHMudGFnLCB7CiAgICAgICAgY2xhc3M6IFsndi1yb3cnLCBjbGFzc2VzLnZhbHVlXQogICAgICB9LCBzbG90cy5kZWZhdWx0ID09IG51bGwgPyB2b2lkIDAgOiBzbG90cy5kZWZhdWx0KCkpOwogICAgfTsKICB9Cn0pOw=="},{"version":3,"sources":["../../../src/components/VGrid/VRow.ts"],"names":["makeTagProps","makeProps","breakpoints","ALIGNMENT","props","prefix","capitalize","def","alignValidator","str","alignProps","makeRowProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","className","val","breakpoint","prop","defineComponent","name","dense","noGutters","setup","slots","classes","computed","classList","value","breakpointClass","h","class"],"mappings":"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","sourcesContent":["// Styles\nimport './VGrid.sass'\n\n// Composables\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { capitalize, computed, defineComponent, h } from 'vue'\nimport makeProps from '@/util/makeProps'\n\n// Types\nimport type { Prop } from 'vue'\n\nconst breakpoints = ['sm', 'md', 'lg', 'xl'] as const // no xs\n\nconst ALIGNMENT = ['start', 'end', 'center'] as const\n\nfunction makeRowProps (prefix: string, def: () => Prop<string, null>) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + capitalize(val)] = def()\n    return props\n  }, {} as Dictionary<Prop<string, null>>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nexport default defineComponent({\n  name: 'VRow',\n\n  props: makeProps({\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n    ...makeTagProps(),\n  }),\n\n  setup (props, { slots }) {\n    const classes = computed(() => {\n      const classList: any[] = []\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      return classList\n    })\n\n    return () => h(props.tag, {\n      class: ['v-row', classes.value],\n    }, slots.default?.())\n  },\n})\n"]}]}